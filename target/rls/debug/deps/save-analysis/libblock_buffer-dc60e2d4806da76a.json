{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3","program":"/Users/taharahiroki/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","block_buffer","/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=dc60e2d4806da76a","-C","extra-filename=-dc60e2d4806da76a","--out-dir","/Users/taharahiroki/secret_account_test/target/rls/debug/deps","-L","dependency=/Users/taharahiroki/secret_account_test/target/rls/debug/deps","--extern","block_padding=/Users/taharahiroki/secret_account_test/target/rls/debug/deps/libblock_padding-6b22d2a13a698986.rmeta","--extern","byte_tools=/Users/taharahiroki/secret_account_test/target/rls/debug/deps/libbyte_tools-87711a73258f5cb2.rmeta","--extern","byteorder=/Users/taharahiroki/secret_account_test/target/rls/debug/deps/libbyteorder-800b244b9ea40710.rmeta","--extern","generic_array=/Users/taharahiroki/secret_account_test/target/rls/debug/deps/libgeneric_array-c43f256493251608.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/taharahiroki/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/taharahiroki/secret_account_test/target/rls/debug/deps/libblock_buffer-dc60e2d4806da76a.rmeta"},"prelude":{"crate_id":{"name":"block_buffer","disambiguator":[18228354126487160656,3823421556023875740]},"crate_root":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src","external_crates":[{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[14971710667112632204,3779288994815239424]}},{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13929365297553886769,10835487607786681578]}},{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[1703814022776569128,10551764917560457909]}},{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":4,"id":{"name":"byteorder","disambiguator":[11986657059450597930,8794024188420137315]}},{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[5023031535946102806,1519945200772436769]}},{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":6,"id":{"name":"alloc","disambiguator":[10905289896639819248,12378153447800695556]}},{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":7,"id":{"name":"libc","disambiguator":[9875817922157896832,6525866999979462444]}},{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[16327553567805037396,13803445574918473825]}},{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":9,"id":{"name":"cfg_if","disambiguator":[8522830685719941355,5926318803845271184]}},{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":10,"id":{"name":"backtrace","disambiguator":[1264957467986197796,4307507407817205004]}},{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14209462635893683258,5261725291371373837]}},{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":12,"id":{"name":"backtrace_sys","disambiguator":[17767136569084421189,11517709274149150814]}},{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":13,"id":{"name":"hashbrown","disambiguator":[6927829448697524174,8965120119738204078]}},{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":14,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16003526636929696339,16081502929097916775]}},{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[15776410874500773192,14769858709110954983]}},{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":16,"id":{"name":"block_padding","disambiguator":[15460155557208127897,14387337719144356994]}},{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":17,"id":{"name":"byte_tools","disambiguator":[5140457203995767877,9817187788294775180]}},{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":18,"id":{"name":"generic_array","disambiguator":[3178722484450052018,4517398826340480503]}},{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","num":19,"id":{"name":"typenum","disambiguator":[16525677247481186134,3602804622169602661]}}],"span":{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":0,"byte_end":6763,"line_start":1,"line_end":210,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":0,"byte_end":6763,"line_start":1,"line_end":210,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":49},{"krate":0,"index":56},{"krate":0,"index":53},{"krate":0,"index":28},{"krate":0,"index":30}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":49},"span":{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":366,"byte_end":377,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"BlockBuffer","qualname":"::BlockBuffer","value":"BlockBuffer {  }","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52}],"decl_id":null,"docs":" Buffer for block processing of data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":835,"byte_end":840,"line_start":31,"line_end":31,"column_start":12,"column_end":17},"name":"input","qualname":"<BlockBuffer<BlockSize>>::input","value":"fn <F> (&mut self, mut input: &[u8], mut f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Process data in `input` in blocks of size `BlockSize` using function `f`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":814,"byte_end":823,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":3472,"byte_end":3482,"line_start":100,"line_end":100,"column_start":12,"column_end":22},"name":"input_lazy","qualname":"<BlockBuffer<BlockSize>>::input_lazy","value":"fn <F> (&mut self, mut input: &[u8], mut f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Variant that doesn't flush the buffer until there's additional\n data to be processed. Suitable for tweakable block ciphers\n like Threefish that need to know whether a block is the *last*\n data block before processing it.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":3451,"byte_end":3460,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":4902,"byte_end":4915,"line_start":147,"line_end":147,"column_start":12,"column_end":25},"name":"len64_padding","qualname":"<BlockBuffer<BlockSize>>::len64_padding","value":"fn <B, F> (&mut self, data_len: u64, mut f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Pad message with 0x80, zeros and 64-bit message length\n in a byte order specified by `B`\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":4881,"byte_end":4890,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":5394,"byte_end":5411,"line_start":162,"line_end":162,"column_start":12,"column_end":29},"name":"len128_padding_be","qualname":"<BlockBuffer<BlockSize>>::len128_padding_be","value":"fn <F> (&mut self, hi: u64, lo: u64, mut f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Pad message with 0x80, zeros and 128-bit message length\n in the big-endian byte order\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":5373,"byte_end":5382,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":6012,"byte_end":6020,"line_start":179,"line_end":179,"column_start":12,"column_end":20},"name":"pad_with","qualname":"<BlockBuffer<BlockSize>>::pad_with","value":"fn <P> (&mut self) -> Result<&mut GenericArray<u8, BlockSize>, PadError>","parent":null,"children":[],"decl_id":null,"docs":" Pad message with a given padding `P`","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":5991,"byte_end":6000,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":6303,"byte_end":6307,"line_start":189,"line_end":189,"column_start":12,"column_end":16},"name":"size","qualname":"<BlockBuffer<BlockSize>>::size","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return size of the internall buffer in bytes\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":6282,"byte_end":6291,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":6427,"byte_end":6435,"line_start":195,"line_end":195,"column_start":12,"column_end":20},"name":"position","qualname":"<BlockBuffer<BlockSize>>::position","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return current cursor position\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":6406,"byte_end":6415,"line_start":194,"line_end":194,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":6568,"byte_end":6577,"line_start":201,"line_end":201,"column_start":12,"column_end":21},"name":"remaining","qualname":"<BlockBuffer<BlockSize>>::remaining","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return number of remaining bytes in the internall buffer\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":6547,"byte_end":6556,"line_start":200,"line_end":200,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":6715,"byte_end":6720,"line_start":207,"line_end":207,"column_start":12,"column_end":17},"name":"reset","qualname":"<BlockBuffer<BlockSize>>::reset","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reset buffer by setting cursor position to zero\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":6694,"byte_end":6703,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":703,"byte_end":714,"line_start":28,"line_end":28,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/taharahiroki/.cargo/registry/src/github.com-1ecc6299db9ec823/block-buffer-0.7.3/src/lib.rs","byte_start":703,"byte_end":714,"line_start":28,"line_end":28,"column_start":34,"column_end":45},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":49},"to":{"krate":4294967295,"index":4294967295}}]}